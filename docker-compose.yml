version: '3.8'

services:
  issues-bot:
    build: .
    container_name: issues-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # OpenAI 配置
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL=${MODEL:-gpt-4o-mini}
      - TEMPERATURE=${TEMPERATURE:-0.3}
      - MAX_TOKENS=${MAX_TOKENS:-2000}
      
      # GitHub 配置
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_PRIVATE_KEY=${GITHUB_PRIVATE_KEY}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      
      # 服务器配置
      - PORT=3000
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # 数据库配置
      - DATABASE_URL=/app/data/issues-bot.db
      
      # AI 功能配置
      - LANGUAGE=${LANGUAGE:-中文}
      - AUTO_FIX_ENABLED=${AUTO_FIX_ENABLED:-true}
      - ISSUE_ANALYSIS_ENABLED=${ISSUE_ANALYSIS_ENABLED:-true}
      - MAX_AUTO_FIX_COMPLEXITY=${MAX_AUTO_FIX_COMPLEXITY:-3}
      - CONFIDENCE_THRESHOLD=${CONFIDENCE_THRESHOLD:-0.8}
      
      # 安全配置
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
    
    volumes:
      # 持久化数据库
      - issues-bot-data:/app/data
      
      # 日志卷（可选）
      - issues-bot-logs:/app/logs
    
    networks:
      - issues-bot-network
    
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).end()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: issues-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL 证书目录
    depends_on:
      - issues-bot
    networks:
      - issues-bot-network
    profiles:
      - with-nginx  # 使用 --profile with-nginx 启用

volumes:
  issues-bot-data:
    driver: local
  issues-bot-logs:
    driver: local

networks:
  issues-bot-network:
    driver: bridge
